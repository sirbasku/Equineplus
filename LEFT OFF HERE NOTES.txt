LEFT OFF:
10/28/2020
For each PK Table to export, create a keyTrans_TABLENAME table with: 
    a GUID ID field from Source table PK (Make Unique) 
    an INT ID field to use as PK in Target table (ID auto increment) 
    a Name field to aid in identifying the keys in queries 

Insert Into transKey_TABLENAME the GUID ID, auto identity an INT ID, and Name field 

transKey_base_Gender for GenderID GUID 
transKey_base_HorseColor for ColorID GUID 
transKey_base_HorseBreed 
transKey_base_Strain (Get best matches from Data1 like '%xxx%' and leave rest null) 
transKey_base_LocalCode 
transKey_base_State 
transKey_base_Country 

transKey_Horse for HorseID GUID 
transKey_Contact 
transKey_Client 
transKey_Boarding 
transKey_ServiceType 
transKey_Service 
transKey_Breeding 

export_base_Gender 
export_base_HorseBreed 
export_base_HorseColor 
export_base_Strain 
export_base_LocalCode 
export_base_State 
export_base_Country 

--skip export_Contact for now, just add the primary contact fields to the client record in export 
export_Client 

** LEFT OFF HERE , tables below are created now populating the transKey's 

======================================================================
working on Client Relationship to Horse, might be better to keep existing Many to Many, for 100% it is just a join from Client to many to horse.  Also same if in partnership...

SELECT h.HorseName, h.HorseID, c.ClientCode, c.ClientID, o.Percentage, (SELECT COUNT(*) FROM user_Ownership WHERE HorseID = h.HorseID) AS OwnershipRecords
FROM user_Horse h
INNER JOIN user_Ownership o ON o.HorseID = h.HorseID
LEFT OUTER JOIN user_Client c ON c.ClientID = o.ClientID
--WHERE o.Percentage = 100
ORDER BY h.HorseID

'JAMILS MAGIDAA'
  NES100 100%
  SIR200 0%

'2015 MISS MAGGIE MAE (ET-C) FILLY' 
  NES100 100%
  SIR200 0%

'ABU JAMILLL RCA'
  ROC101 0%

'2018 MISHAALA BELLE RCA (ET-A) FILLY' 
  SIR401 75.52
  VIT401 8.16
  CAL400 8.16
  CEL401 8.16

'SERENDIPITYS LADY'
  SIR400 51%
  RAF400 9.8
  KEL400 9.8
  WHI400 9.8
  CEL400 9.8
  WRI401 9.8

'SERENDIPITYS SPIRIT'
  SIR400 51%
  KEL400 9.8
  RAF400 9.8
  WRI401 9.8
  WHI400 9.8 
  CEL400 9.8

'2020 LADY SINAN RCA FILLY'
  SOO500 50%
  SMI200 50%



==================================================
export_Horse 
    DECIDED TO KEEP CURRENT MANY TO MANY Ownership BETWEEN CLIENT AND HORSE TABLES add ClientID FK
    DONE add BreedID FK
    DONE add StrainID FK
    DONE add legacy fields like DataX TitleX 

transKey_Ownership
export_Ownership
export_Boarding 
export_Service 
export_Breeding 

*** Then create in target system 

Base_ tables 
Entity tables 
Views for reports 
Stored procs for actions 

*** Add new table for Arrival Departures 

**Once this is done no changes can be retransferred unless clear all transTables and start over or implement a mechanism to not select records already added to the trans table.  

Figure out Breeding Procs 
Figure out if Want to make one "Charges file and allow user to see all/Vet/Farrier/Misc (?Boarding Charge?) or if want separate.  Probably depends on how easy the subform control is depending on whether ZoHo or JavaScript... 

------------------------------------------------------------------------------
10/28/2020
See Onenote export notes
Just created and populated export_base tables
About to create and populate export main entity tables (Horse Client, etc)

10/25/2020
BandNumber is in table user_Maintenance!

Scripted Equine Pro db's stored procs, views and user functions.
Ran create scripts against Equieplus db
Copied Errors into "EP SP_VW_andFunctions.sql comments 

10/24/2020
Added .gitignore Generator to vscode
Added GitLens to vscode
(already had:
 Debugger for MS Edge
 HTML CSS Support
 HTML Preview
 HTMLHint
 Intellisense for CSS class names
 open-in-browser
 SQL Formatter
 SQL Server (mssql)
Create GitHub repository Equineplus
Created VSCode\Equineplus project folder with subfolders for sql scripts
Created .gitignore file in project root
Create Local Git repository
Moved repository to GitHub

